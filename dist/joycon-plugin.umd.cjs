(function(d,s){typeof exports=="object"&&typeof module<"u"?module.exports=s():typeof define=="function"&&define.amd?define(s):(d=typeof globalThis<"u"?globalThis:d||self,d.reveal=d.reveal||{},d.reveal["js - The Joy Con plugin"]=s())})(this,function(){"use strict";const d={type:"right",cooldown:300,pointerSpeed:20},s={A:0,X:1,B:2,Y:3,SL:4,SR:5,ZR:7,R:8,PLUS:9,STICK:10,HOME:16},i={DLEFT:0,DBOTTOM:1,DUP:2,DRIGHT:3,SL:4,SR:5,ZL:6,L:8,MINUS:9,STICK:10,SCREENSHOT:16},T={LOY:0,LOX:1,ROY:2,ROX:3},w=n=>{var I,R,x;const E=n.getConfig();console.log("Joy Con plugin loaded",E.joycon||{});const l=((I=E.joycon)==null?void 0:I.type)||d.type,b=((R=E.joycon)==null?void 0:R.cooldown)||d.cooldown,y=((x=E.joycon)==null?void 0:x.pointerSpeed)||d.pointerSpeed,c={RIGHT:l==="left"?i.DRIGHT:s.A,LEFT:l==="left"?i.DLEFT:s.Y,UP:l==="left"?i.DUP:s.X,DOWN:l==="left"?i.DBOTTOM:s.B,PREV:l==="left"?i.SL:s.SL,NEXT:l==="left"?i.SR:s.SR,QUIT_OVERVIEW_OR_NEXT:l==="left"?i.ZL:s.ZR,TOGGLE_OVERVIEW:l==="left"?i.L:s.R,TOGGLE_POINTING:l==="left"?i.STICK:s.STICK,TOGGLE_PAUSE:l==="left"?i.MINUS:s.PLUS,TOGGLE_HELP:l==="left"?i.SCREENSHOT:s.HOME},L="ongamepadconnected"in window,p={};let g=[],O=!1;const o=document.createElement("div");o.style.position="absolute",o.style.width="20px",o.style.height="20px",o.style.boxShadow="3px 2px 2px #333",o.style.background="#f00",o.style.top="50%",o.style.left="50%",o.style.zIndex="99",o.style.borderRadius="50%",o.style.display="none",document.body.appendChild(o);function h(e){return g.indexOf(e)<0?(g.push(e),setTimeout(()=>{g=g.filter(a=>a!==e)},b),!0):!1}function G(){const e=navigator.getGamepads?navigator.getGamepads():[];for(let a=0;a<e.length;a++){const t=e[a];t&&(t.index in p?p[t.index]=t:S(t))}}function m(){L||G();for(const e in p)if(Object.prototype.hasOwnProperty.call(p,e)){const a=p[e];if(!a)continue;for(let t=0;t<a.buttons.length;t++){const r=a.buttons[t];let f;typeof r=="object"&&(f=r.pressed),f&&h(`button-${t}`)&&v(t)}for(let t=0;t<a.axes.length;t++){const r=a.axes[t];if(r){if(Math.abs(r)>.85&&!O&&h(`axis-${t}`))switch(t){case T.LOY:{r<0?n.down():n.up();break}case T.LOX:{r<0?n.left():n.right();break}}if(Math.abs(r)>.2&&O){const f=parseInt(o.style.left.replace("px","")),u=parseInt(o.style.top.replace("px",""));N(t,r,f,u,U=>Math.min(Math.max(U,0),window.innerWidth))}}}}requestAnimationFrame(m)}function N(e,a,t,r,f){switch(e){case T.LOY:{const u=-a*y+r;o.style.top=f(u)+"px";break}case T.LOX:{const u=a*y+t;o.style.left=f(u)+"px";break}}}function v(e){switch(console.log(e),e){case c.RIGHT:n.right();break;case c.DOWN:n.down();break;case c.UP:n.up();break;case c.LEFT:n.left();break;case c.PREV:n.prev();break;case c.NEXT:n.next();break;case c.TOGGLE_OVERVIEW:n.toggleOverview();break;case c.QUIT_OVERVIEW_OR_NEXT:n.isOverview()?n.toggleOverview():n.next();break;case c.TOGGLE_PAUSE:n.togglePause();break;case c.TOGGLE_POINTING:O=!O,o.style.display=O?"block":"none";break;case c.TOGGLE_HELP:n.toggleHelp();break;default:console.log("Button not mapped :",e)}}function S(e){p[e.index]=e,requestAnimationFrame(m)}function _(e){delete p[e.index]}function P(e){S(e.gamepad),console.log(`ðŸŽ® Gamepad ${e.gamepad.index} connected âš¡`)}function C(e){_(e.gamepad),console.log(`ðŸŽ® Gamepad ${e.gamepad.index} disconnected ðŸ”Œ`)}window.addEventListener("gamepadconnected",P),window.addEventListener("gamepaddisconnected",C),L||setInterval(G,500)};return()=>({id:"joycon-plugin",init:w})});
